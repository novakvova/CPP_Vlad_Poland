#include <iostream>
using namespace std;
#include<Windows.h>


//Що таке функція - це програма, яка може, що приймати і щось повертати, або нічого не повертати.
//Як описується функція 
void funFor(const int n, const string name) {
	cout << "------Робота циклу for------\n";
	for (int i = 0;i < n;i++)
	{
		cout << name << endl; //endl - "\n"
	}
}
//Параметри фукції, як посилання
void funLinkFor(const int &n, const string &name) {
	cout << "------Робота циклу for------\n";
	for (int i = 0;i < n;i++)
	{
		cout << name << endl; //endl - "\n"
	}
}
//Вказівник - вказує на обасть памяті - де зберіється змінна
void funPointerFor(const int *n, const string* name) {
	//*n - вказівник на змінну, а **n - розіменування - отримуємо саме значення на яке вказує вказівник
	cout << "------Робота циклу for------\n";
	for (int i = 0;i < *n;i++)
	{
		cout << *name << endl; //endl - "\n"
	}
}

//Точка входу в програму
int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	//Створити змінну name, яка зберігає у собі рядок
	string name = "Новак Вова";
	//cout << name << "\n";
	//Як створити зміну, яка буде зберігати у собі число Наприклад n=10
	int n; //ціле чило 
	cout << "Вкажіть кількість виведень: ";
	cin >> n; //Очікує від користовача вводу числа n.
	//cout <<"Ви вказали значення: " << n << "\n";
	//Як виконати операцію декілька разів - цикли. for, while, do while
	//int i = 0; - інціалізація циклу - виконуєть 1 раз на початку циклу
	//i < n; - умова продовження роботи циклу - перевіряється умова, якщо вона вірна виконується тіло циклу 
	//i++ - операція інкреметнут (i=i+1) - ітерація циклу
	//funFor(n, name);
	//funLinkFor(n, name);
	funPointerFor(&n, &name); //& - отримує вказівник, на яку вказує у пам'яті данна змінна.
	cout << "------Робота циклу while------\n";
	int i = 0; //ініціалізація циклу - while
	while (i < n) { //умова продовження циклу i<n
		cout << name << "\n";
		i++; //змінюємо лічильник циклу
	}
	cout << "------Робота циклу do while------\n";
	i = 0; //Не можна 2 рази робити одну і туж саму змінну
	do {
		if (i >= n)  //Запобігаємо 1 лишньому проходу, якщо ми вказали наприклад n=0
			break;
		cout << name << endl;
		i++;
	} while (i < n);
	return 0;
}